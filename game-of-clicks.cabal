cabal-version:      3.0

-- Initial package description 'game-of-clicks.cabal' generated by
-- 'cabal init'. For further documentation, see:
--   http://haskell.org/cabal/users-guide/
--
-- The name of the package.
name:               game-of-clicks

-- The package version.
-- See the Haskell package versioning policy (PVP) for standards
-- guiding when and how versions should be incremented.
-- https://pvp.haskell.org
-- PVP summary:      +-+------- breaking API changes
--                   | | +----- non-breaking API additions
--                   | | | +--- code changes with no API change
version:            0.1.0.0

-- A short (one-line) description of the package.
synopsis:           Game Of Clicks: TV Channel Navigation Problem.

-- A longer description of the package.
-- description:

-- URL for the project homepage or repository.
homepage:

-- A URL where users can report bugs.
-- bug-reports:

-- The license under which the package is released.
license:            NONE

-- The package author(s).
author:             Prem Muthedath

-- An email address to which users can send suggestions, bug reports, and patches.
maintainer:

-- A copyright notice.
-- copyright:
-- category:

-- Extra files to be distributed with the package, such as examples or a README.
extra-source-files:
  CHANGELOG.md
  cabal.project.freeze
  docs/problem-statement.txt
  tests/good-file-inputs/normal.txt
  tests/good-file-inputs/zero-blocked.txt
  tests/good-file-inputs/zero-viewables.txt
  tests/good-file-inputs/same-high-low-blocked.txt
  tests/good-file-inputs/same-high-low-viewable.txt
  tests/good-file-inputs/high-low-blocked-with-looping.txt
  tests/good-file-inputs/blocked-within.txt
  tests/bad-file-inputs/empty-file.txt
  tests/bad-file-inputs/missing-viewables.txt
  tests/bad-file-inputs/no-viewables-count.txt
  tests/bad-file-inputs/non-text-file.xml
  tests/bad-file-inputs/negative-input.txt
  tests/bad-file-inputs/non-integer-input.txt

-- compiler version
tested-with: GHC == 8.10.4

-- Define and initialize a `Testing` flag for CPP usage.
-- We do this here because using CPP directive, we can test internal functions 
-- that are hidden from external users of this package. so how does this work?
--    1. Well, we first define a flag `Testing`;
--    2. By default, `Testing` is set to `False`;
--    3. You can turn `Testing` to `True` at the commandline by:
--
--       `cabal v2-run -f testing :unit-conversion-test`
--
--    3. If you set `Testing` to `True`, as shown in (3), then the corresponding 
--       `CPP` option `TESTING` is then set as "defined" in the `if
--       flag(Testing) cpp-options: -DTESTING` code;
--
--    4. Once `TESTING` is defined, in module export, functions exported within 
--       the `#ifdef TESTING ... #endif` block can be accessed for testing;
--    5. `Testing` is `false` by default, but you can also set it to `False` at 
--       the commandline by:
--
--       `cabal v2-run -f -testing :unit-conversion-test`
--
--    6. If `Testing = False`, then `TESTING` is undefined, so functions within 
--       `#ifdef TESTING ... #endif` block in module export will be hidden.
-- REF:
--  1. https://tinyurl.com/4ajtp3wn (cabal 3.40 docs on flags & CPP)
--  2. https://guide.aelve.com/haskell/cpp-vww0qd72#item-oh9ytz0p (cabal CPP)
--  3. https://guide.aelve.com/haskell/cpp-vww0qd72 (CPP overview)
--  4. haskell-chat--cabal-cpp-flags-setup.txt (meaning of `-DTESTING`)
--  5. https://tinyurl.com/hr2x3n8r (/u/ ralph, so) (CPP in module export)
--  6. https://tinyurl.com/33wmdvzd (/u/ willen van onsem, so) (CPP indentation)
--  7. https://tinyurl.com/2s4h9vth (cs.auckland.nz, #if, #ifdef, #endif)
Flag Testing
  Description:   Turn on testing
  Default:       True
  Manual:        False

library
    -- Modules exported by the library.
    exposed-modules:  GameOfClicks

    -- Modules included in this library but not exported.
    other-modules:
      Game.Core
      Game.Types
      Game.IO
      Game.Common

    -- LANGUAGE extensions used by modules in this package.
    other-extensions: ScopedTypeVariables

    -- Other library packages from which modules are imported.
    build-depends:
        base ==4.14.1.0
      , mtl  ==2.2.2
      , directory ==1.3.6.0
      , filepath ==1.4.2.1

    -- Directories containing source files.
    hs-source-dirs:   src

    -- Base language which the package is written in.
    default-language: Haskell2010

   -- GHC options.
    ghc-options:  -O2 -fforce-recomp -Wall -Werror

    -- NOTE:
    -- 1. `If` block below is NECESSARY and does the following: if `Testing` is 
    --    `True`, then it "defines" the CPP option `TESTING`. so that code that 
    --    is conditionally dependent on `TESTING` will be executed. for us, this 
    --    happens in module export, where `#ifdef TESTING ...  #endif` will 
    --    execute code within the block, exporting functions in the block.
    -- 2. `Testing` is in cabal land; `TESTING` is CPP: `Testing` /= `TESTING`.
    -- 3. `-D` is a CPP option where `D` stands for `define`.
    -- 4. See haskell-chat--cabal-cpp-flags-setup.txt (meaning of `-DTESTING`)
    if flag(Testing)
      cpp-options: -DTESTING

executable game-of-clicks-app
    -- .hs or .lhs file containing the Main module.
    main-is:  Main.hs

    -- Modules included in this executable, other than Main.
    -- other-modules:

    -- LANGUAGE extensions used by modules in this package.
    other-extensions: ScopedTypeVariables

    -- Other library packages from which modules are imported.
    build-depends:
        base ==4.14.1.0,
        game-of-clicks

    -- Directories containing source files.
    hs-source-dirs:   app

    -- Base language which the package is written in.
    default-language: Haskell2010

   -- GHC options.
    ghc-options:  -O2 -fforce-recomp -Wall -Werror

test-suite game-of-clicks-tests
    -- Base language which the package is written in.
    default-language: Haskell2010

    -- LANGUAGE extensions used by modules in this package.
    -- other-extensions:

    -- The interface type and version of the test suite.
    type:             exitcode-stdio-1.0

    -- Directories containing source files.
    hs-source-dirs:   tests

    -- The entrypoint to the test suite.
    main-is:          Main.hs

    -- Modules included in this executable, other than Main.
    other-modules:
      Tests
      Types

    -- Test dependencies.
    build-depends:
        base ==4.14.1.0
      , game-of-clicks

   -- GHC options.
    ghc-options:  -O2 -fforce-recomp -Wall -Werror
